import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";
import { createOrder } from "./orderAPI";

const initialState = {
	orders: [],
	status: "idle",
};

export const createOrderAsync = createAsyncThunk(
	"orders/createOrder",
	async (amount) => {
		const response = await createOrder(amount);
		console.log(response);
		return response.data;
	}
);
export const orderSlice = createSlice({
	name: "orders",
	initialState,
	reducers: {},
	// The `extraReducers` field lets the slice handle actions defined elsewhere,
	// including actions generated by createAsyncThunk or in other slices.
	extraReducers: (builder) => {
		builder
			.addCase(createOrderAsync.pending, (state) => {
				state.status = "loading";
			})
			.addCase(createOrderAsync.fulfilled, (state, action) => {
				state.status = "idle";
				state.orders.push(action.payload);
			});
	},
});

export default orderSlice.reducer;
